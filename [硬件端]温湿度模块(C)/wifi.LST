C51 COMPILER V9.60.0.0   WIFI                                          10/10/2020 19:05:04 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE WIFI
OBJECT MODULE PLACED IN wifi.OBJ
COMPILER INVOKED BY: D:\APP\Keil\C51\BIN\C51.EXE wifi.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\SRC) DEBUG
                    - OBJECTEXTEND PAGEWIDTH(100)

line level    source

   1          #include "reg51.h"
   2          #include "intrins.h"
   3          #include "wifi.h"
   4          #include "remote.h"
   5          
   6          #define FOSC 11059200L          //系统频率
   7          #define BAUD 9600                       //串口波特率
   8          
   9          sfr AUXR  = 0x8e;               //辅助寄存器
  10          sfr S2CON = 0x9a;               //UART2 控制寄存器
  11          sfr S2BUF = 0x9b;               //UART2 数据寄存器
  12          sfr T2H   = 0xd6;               //定时器2高8位
  13          sfr T2L   = 0xd7;               //定时器2低8位
  14          sfr IE2   = 0xaf;               //中断控制寄存器2
  15          
  16          #define S2RI  0x01              //S2CON.0
  17          #define S2TI  0x02              //S2CON.1
  18          #define S2RB8 0x04              //S2CON.2
  19          #define S2TB8 0x08              //S2CON.3
  20          
  21          sfr P_SW2   = 0xBA;             //外设功能切换寄存器2
  22          #define S2_S0 0x01              //P_SW2.0
  23          bit busy2;
  24          
  25          
  26          bit flag = 0; // 用来判断当前是否接收到了空调数据
  27          int index = 0; // 当前接收到数据的位置
  28          // 使用全局变量来存储接收到的串口数据
  29          unsigned char tempData[3] = {0,0,0};
  30          
  31          // 串口2的初始化
  32          void u2Init()
  33          {
  34   1              //P_SW2负责控制串口2在2组管脚之间切换的控制位
  35   1          P_SW2 &= ~S2_S0;            //S2_S0=0 (P1.0/RxD2, P1.1/TxD2)
  36   1      //  P_SW2 |= S2_S0;             //S2_S0=1 (P4.6/RxD2_2, P4.7/TxD2_2)
  37   1              //这个负责控制串口2的工作方式，这里我们配置的和串口1一样
  38   1          S2CON = 0x50;               //8位可变波特率
  39   1              //T2L 和T2H 分为控制定时器2的高八位和低八位，主要负责波特率的计算
  40   1              T2L = (65536 - (FOSC/4/BAUD));   //设置波特率重装值
  41   1          T2H = (65536 - (FOSC/4/BAUD))>>8;
  42   1              //AUXR 是一个辅助寄存器，主要负责控制定时器2的控制
  43   1              // 我们这里是 00010100 T2R为1 T2X12为1
  44   1              //01010100
  45   1              //T2R是定时器2的运行控制位，为1就代表允许定时器2运行
  46   1              //T2X12为定时器2速度控制。我们这里为1就是说明定时器2的速度为传统51的12倍，不分频
  47   1              //01000000 T1x12为1表示定时器1的速度是传统8051的12倍
  48   1          AUXR = AUXR|0x14;                //T2为1T模式, 并启动定时器2
  49   1              //开启串口2中断，这里不需要TR2因为TR2在AUXR里面
  50   1          IE2 = 0x01;                 //使能串口2中断
  51   1              // 开启系统中断
  52   1          EA = 1;
  53   1      }
  54          
C51 COMPILER V9.60.0.0   WIFI                                          10/10/2020 19:05:04 PAGE 2   

  55          /*----------------------------
  56          UART2 中断服务程序
  57          -----------------------------*/
  58          void Uart2() interrupt 8
  59          {
  60   1              unsigned char dat;
  61   1          if (S2CON & S2RI)
  62   1          {
  63   2              S2CON &= ~S2RI;         //清除S2RI位
  64   2              dat = S2BUF;             // 获取串口数据
  65   2                      // 判断是否准备接收
  66   2                      if (flag) {
  67   3                              // 判断数组是否越界
  68   3                              if (index > 1) {
  69   4                                      // 我们这里判断一下数据的范围
  70   4                                      if(tempData[0]<16 || tempData[0]>30) tempData[0] = 0;
  71   4                                      // 注意这里不要直接控制串口1发送数据，会造成堵塞
  72   4                                      //SendData(tempData[0]);
  73   4                                      // 我们开始设置空调温度
  74   4                                      //AirControl(tempData[0]);
  75   4                                      flag=0;
  76   4                                      index=0;
  77   4                              } else {        
  78   4                                      // 接收数据
  79   4                                      tempData[index] = dat;
  80   4                                      index ++ ;
  81   4                              }
  82   3                      }
  83   2                      // 判断是否可以开始接收数据
  84   2                      if (dat==0xfd){                 // 准备接收数据
  85   3                              flag = 1;
  86   3                      }
  87   2          }
  88   1          if (S2CON & S2TI)
  89   1          {
  90   2              S2CON &= ~S2TI;         //清除S2TI位
  91   2              busy2 = 0;               //清忙标志
  92   2          }
  93   1      }
  94          
  95          /*----------------------------
  96          发送串口数据
  97          ----------------------------*/
  98          void SendData2(unsigned char dat)
  99          {
 100   1          while (busy2);               //等待前面的数据发送完成
 101   1          busy2 = 1;
 102   1          S2BUF = dat;                //写数据到UART2数据寄存器
 103   1      }
 104          
 105          /*----------------------------
 106          发送字符串
 107          ----------------------------*/
 108          void SendString2(char *s)
 109          {
 110   1          while (*s)                  //检测字符串结束标志
 111   1          {
 112   2              SendData2(*s++);         //发送当前字符
 113   2          }
 114   1      }
 115          
 116          
C51 COMPILER V9.60.0.0   WIFI                                          10/10/2020 19:05:04 PAGE 3   

 117          /*获取当前空调的温度*/
 118          unsigned char getTemp(){
 119   1              return tempData[0];
 120   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    189    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
