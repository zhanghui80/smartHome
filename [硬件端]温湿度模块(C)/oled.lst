C51 COMPILER V9.60.0.0   OLED                                          10/10/2020 19:05:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN oled.obj
COMPILER INVOKED BY: D:\APP\Keil\C51\BIN\C51.EXE SRC\oled.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\SRC) D
                    -EBUG OBJECTEXTEND PRINT(.\oled.lst) PAGEWIDTH(100) OBJECT(oled.obj)

line level    source

   1          //////////////////////////////////////////////////////////////////////////////////       
   2          
   3          //******************************************************************************/。
   4          #include "oled.h"
   5          //#include "stdlib.h"
   6          #include "oledfont.h"    
   7          //#include "delay.h"
   8          //OLED的显存
   9          //存放格式如下.
  10          //[0]0 1 2 3 ... 127    
  11          //[1]0 1 2 3 ... 127    
  12          //[2]0 1 2 3 ... 127    
  13          //[3]0 1 2 3 ... 127    
  14          //[4]0 1 2 3 ... 127    
  15          //[5]0 1 2 3 ... 127    
  16          //[6]0 1 2 3 ... 127    
  17          //[7]0 1 2 3 ... 127                       
  18          void delay_ms(unsigned int ms)
  19          {                         
  20   1              unsigned int a;
  21   1              while(ms)
  22   1              {
  23   2                      a=1800;
  24   2                      while(a--);
  25   2                      ms--;
  26   2              }
  27   1              return;
  28   1      }
  29          /**********************************************
  30          //IIC Start
  31          **********************************************/
  32          void IIC_Start()
  33          {
  34   1      
  35   1              OLED_SCLK_Set() ;
  36   1              OLED_SDIN_Set();
  37   1              OLED_SDIN_Clr();
  38   1              OLED_SCLK_Clr();
  39   1      }
  40          
  41          /**********************************************
  42          //IIC Stop
  43          **********************************************/
  44          void IIC_Stop()
  45          {
  46   1      OLED_SCLK_Set() ;
  47   1      //      OLED_SCLK_Clr();
  48   1              OLED_SDIN_Clr();
  49   1              OLED_SDIN_Set();
  50   1              
  51   1      }
  52          
  53          void IIC_Wait_Ack()
  54          {
C51 COMPILER V9.60.0.0   OLED                                          10/10/2020 19:05:03 PAGE 2   

  55   1      
  56   1              //GPIOB->CRH &= 0XFFF0FFFF;     //设置PB12为上拉输入模式
  57   1              //GPIOB->CRH |= 0x00080000;
  58   1      //      OLED_SDA = 1;
  59   1      //      delay_us(1);
  60   1              //OLED_SCL = 1;
  61   1              //delay_us(50000);
  62   1      /*      while(1)
  63   1              {
  64   1                      if(!OLED_SDA)                           //判断是否接收到OLED 应答信号
  65   1                      {
  66   1                              //GPIOB->CRH &= 0XFFF0FFFF;     //设置PB12为通用推免输出模式
  67   1                              //GPIOB->CRH |= 0x00030000;
  68   1                              return;
  69   1                      }
  70   1              }
  71   1      */
  72   1              OLED_SCLK_Set() ;
  73   1              OLED_SCLK_Clr();
  74   1      }
  75          /**********************************************
  76          // IIC Write byte
  77          **********************************************/
  78          
  79          void Write_IIC_Byte(unsigned char IIC_Byte)
  80          {
  81   1              unsigned char i;
  82   1              unsigned char m,da;
  83   1              da=IIC_Byte;
  84   1              OLED_SCLK_Clr();
  85   1              for(i=0;i<8;i++)                
  86   1              {
  87   2                              m=da;
  88   2                      //      OLED_SCLK_Clr();
  89   2                      m=m&0x80;
  90   2                      if(m==0x80)
  91   2                      {OLED_SDIN_Set();}
  92   2                      else OLED_SDIN_Clr();
  93   2                              da=da<<1;
  94   2                      OLED_SCLK_Set();
  95   2                      OLED_SCLK_Clr();
  96   2                      }
  97   1      
  98   1      
  99   1      }
 100          /**********************************************
 101          // IIC Write Command
 102          **********************************************/
 103          void Write_IIC_Command(unsigned char IIC_Command)
 104          {
 105   1         IIC_Start();
 106   1         Write_IIC_Byte(0x78);            //Slave address,SA0=0
 107   1              IIC_Wait_Ack(); 
 108   1         Write_IIC_Byte(0x00);                        //write command
 109   1              IIC_Wait_Ack(); 
 110   1         Write_IIC_Byte(IIC_Command); 
 111   1              IIC_Wait_Ack(); 
 112   1         IIC_Stop();
 113   1      }
 114          /**********************************************
 115          // IIC Write Data
 116          **********************************************/
C51 COMPILER V9.60.0.0   OLED                                          10/10/2020 19:05:03 PAGE 3   

 117          void Write_IIC_Data(unsigned char IIC_Data)
 118          {
 119   1         IIC_Start();
 120   1         Write_IIC_Byte(0x78);                        //D/C#=0; R/W#=0
 121   1              IIC_Wait_Ack(); 
 122   1         Write_IIC_Byte(0x40);                        //write data
 123   1              IIC_Wait_Ack(); 
 124   1         Write_IIC_Byte(IIC_Data);
 125   1              IIC_Wait_Ack(); 
 126   1         IIC_Stop();
 127   1      }
 128          void OLED_WR_Byte(unsigned dat,unsigned cmd)
 129          {
 130   1              if(cmd)
 131   1                              {
 132   2      
 133   2         Write_IIC_Data(dat);
 134   2         
 135   2                      }
 136   1              else {
 137   2         Write_IIC_Command(dat);
 138   2                      
 139   2              }
 140   1      
 141   1      
 142   1      }
 143          
 144          /********************************************
 145          // fill_Picture
 146          ********************************************/
 147          void fill_picture(unsigned char fill_Data)
 148          {
 149   1              unsigned char m,n;
 150   1              for(m=0;m<8;m++)
 151   1              {
 152   2                      OLED_WR_Byte(0xb0+m,0);         //page0-page1
 153   2                      OLED_WR_Byte(0x00,0);           //low column start address
 154   2                      OLED_WR_Byte(0x10,0);           //high column start address
 155   2                      for(n=0;n<128;n++)
 156   2                              {
 157   3                                      OLED_WR_Byte(fill_Data,1);
 158   3                              }
 159   2              }
 160   1      }
 161          
 162          
 163          /***********************Delay****************************************/
 164          void Delay_50ms(unsigned int Del_50ms)
 165          {
 166   1              unsigned int m;
 167   1              for(;Del_50ms>0;Del_50ms--)
 168   1                      for(m=6245;m>0;m--);
 169   1      }
 170          
 171          void Delay_1ms(unsigned int Del_1ms)
 172          {
 173   1              unsigned char j;
 174   1              while(Del_1ms--)
 175   1              {       
 176   2                      for(j=0;j<123;j++);
 177   2              }
 178   1      }
C51 COMPILER V9.60.0.0   OLED                                          10/10/2020 19:05:03 PAGE 4   

 179          
 180          //坐标设置
 181          
 182                  void OLED_Set_Pos(unsigned char x, unsigned char y) 
 183          {       OLED_WR_Byte(0xb0+y,OLED_CMD);
 184   1              OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 185   1              OLED_WR_Byte((x&0x0f),OLED_CMD); 
 186   1      }         
 187          //开启OLED显示    
 188          void OLED_Display_On(void)
 189          {
 190   1              OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 191   1              OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
 192   1              OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
 193   1      }
 194          //关闭OLED显示     
 195          void OLED_Display_Off(void)
 196          {
 197   1              OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
 198   1              OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
 199   1              OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
 200   1      }                                        
 201          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!        
 202          void OLED_Clear(void)  
 203          {  
 204   1              u8 i,n;             
 205   1              for(i=0;i<8;i++)  
 206   1              {  
 207   2                      OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 208   2                      OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 209   2                      OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 210   2                      for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 211   2              } //更新显示
 212   1      }
 213          void OLED_On(void)  
 214          {  
 215   1              u8 i,n;             
 216   1              for(i=0;i<8;i++)  
 217   1              {  
 218   2                      OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 219   2                      OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
 220   2                      OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 221   2                      for(n=0;n<128;n++)OLED_WR_Byte(1,OLED_DATA); 
 222   2              } //更新显示
 223   1      }
 224          //在指定位置显示一个字符,包括部分字符
 225          //x:0~127
 226          //y:0~63
 227          //mode:0,反白显示;1,正常显示                             
 228          //size:选择字体 16/12 
 229          void OLED_ShowChar(u8 x,u8 y,u8 chr,u8 Char_Size)
 230          {       
 231   1              unsigned char c=0,i=0;  
 232   1                      c=chr-' ';//得到偏移后的值                      
 233   1                      if(x>Max_Column-1){x=0;y=y+2;}
 234   1                      if(Char_Size ==16)
 235   1                              {
 236   2                              OLED_Set_Pos(x,y);      
 237   2                              for(i=0;i<8;i++)
 238   2                              OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 239   2                              OLED_Set_Pos(x,y+1);
 240   2                              for(i=0;i<8;i++)
C51 COMPILER V9.60.0.0   OLED                                          10/10/2020 19:05:03 PAGE 5   

 241   2                              OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 242   2                              }
 243   1                              else {  
 244   2                                      OLED_Set_Pos(x,y);
 245   2                                      for(i=0;i<6;i++)
 246   2                                      OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 247   2                                      
 248   2                              }
 249   1      }
 250          //m^n函数
 251          u32 oled_pow(u8 m,u8 n)
 252          {
 253   1              u32 result=1;    
 254   1              while(n--)result*=m;    
 255   1              return result;
 256   1      }                                 
 257          //显示2个数字
 258          //x,y :起点坐标  
 259          //len :数字的位数
 260          //size:字体大小
 261          //mode:模式     0,填充模式;1,叠加模式
 262          //num:数值(0~4294967295);                         
 263          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 264          {               
 265   1              u8 t,temp;
 266   1              u8 enshow=0;                                               
 267   1              for(t=0;t<len;t++)
 268   1              {
 269   2                      temp=(num/oled_pow(10,len-t-1))%10;
 270   2                      if(enshow==0&&t<(len-1))
 271   2                      {
 272   3                              if(temp==0)
 273   3                              {
 274   4                                      OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 275   4                                      continue;
 276   4                              }else enshow=1; 
 277   3                               
 278   3                      }
 279   2                      OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 280   2              }
 281   1      } 
 282          //显示一个字符号串
 283          void OLED_ShowString(u8 x,u8 y,u8 *chr,u8 Char_Size)
 284          {
 285   1              unsigned char j=0;
 286   1              while (chr[j]!='\0')
 287   1              {               OLED_ShowChar(x,y,chr[j],Char_Size);
 288   2                              x+=8;
 289   2                      if(x>120){x=0;y+=2;}
 290   2                              j++;
 291   2              }
 292   1      }
 293          //显示汉字
 294          void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 295          {                           
 296   1              u8 t,adder=0;
 297   1              OLED_Set_Pos(x,y);      
 298   1          for(t=0;t<16;t++)
 299   1                      {
 300   2                                      OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 301   2                                      adder+=1;
 302   2           }  
C51 COMPILER V9.60.0.0   OLED                                          10/10/2020 19:05:03 PAGE 6   

 303   1                      OLED_Set_Pos(x,y+1);    
 304   1          for(t=0;t<16;t++)
 305   1                              {       
 306   2                                      OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 307   2                                      adder+=1;
 308   2            }                                 
 309   1      }
 310          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围
             -0～7*****************/
 311          void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y
             -1,unsigned char BMP[])
 312          {       
 313   1       unsigned int j=0;
 314   1       unsigned char x,y;
 315   1        
 316   1        if(y1%8==0) y=y1/8;      
 317   1        else y=y1/8+1;
 318   1              for(y=y0;y<y1;y++)
 319   1              {
 320   2                      OLED_Set_Pos(x0,y);
 321   2          for(x=x0;x<x1;x++)
 322   2                  {      
 323   3                      OLED_WR_Byte(BMP[j++],OLED_DATA);               
 324   3                  }
 325   2              }
 326   1      } 
 327          
 328          //初始化SSD1306                                     
 329          void OLED_Init(void)
 330          {       
 331   1       
 332   1      OLED_WR_Byte(0xAE,OLED_CMD);//--display off
 333   1              OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 334   1              OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 335   1              OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  
 336   1              OLED_WR_Byte(0xB0,OLED_CMD);//--set page address
 337   1              OLED_WR_Byte(0x81,OLED_CMD); // contract control
 338   1              OLED_WR_Byte(0xFF,OLED_CMD);//--128   
 339   1              OLED_WR_Byte(0xA1,OLED_CMD);//set segment remap 
 340   1              OLED_WR_Byte(0xA6,OLED_CMD);//--normal / reverse
 341   1              OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 342   1              OLED_WR_Byte(0x3F,OLED_CMD);//--1/32 duty
 343   1              OLED_WR_Byte(0xC8,OLED_CMD);//Com scan direction
 344   1              OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset
 345   1              OLED_WR_Byte(0x00,OLED_CMD);//
 346   1              
 347   1              OLED_WR_Byte(0xD5,OLED_CMD);//set osc division
 348   1              OLED_WR_Byte(0x80,OLED_CMD);//
 349   1              
 350   1              OLED_WR_Byte(0xD8,OLED_CMD);//set area color mode off
 351   1              OLED_WR_Byte(0x05,OLED_CMD);//
 352   1              
 353   1              OLED_WR_Byte(0xD9,OLED_CMD);//Set Pre-Charge Period
 354   1              OLED_WR_Byte(0xF1,OLED_CMD);//
 355   1              
 356   1              OLED_WR_Byte(0xDA,OLED_CMD);//set com pin configuartion
 357   1              OLED_WR_Byte(0x12,OLED_CMD);//
 358   1              
 359   1              OLED_WR_Byte(0xDB,OLED_CMD);//set Vcomh
 360   1              OLED_WR_Byte(0x30,OLED_CMD);//
 361   1              
 362   1              OLED_WR_Byte(0x8D,OLED_CMD);//set charge pump enable
C51 COMPILER V9.60.0.0   OLED                                          10/10/2020 19:05:03 PAGE 7   

 363   1              OLED_WR_Byte(0x14,OLED_CMD);//
 364   1              
 365   1              OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 366   1      }  
 367          
 368          
 369          
 370          
 371          
 372          
 373          
 374          
 375          
 376          
 377          
 378          
 379          
 380          
 381          
 382          
 383          
 384          
 385          
 386          
 387          
 388          
 389          
 390          
 391          
 392          
 393          
 394          
 395          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1367    ----
   CONSTANT SIZE    =   2456    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      41
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
